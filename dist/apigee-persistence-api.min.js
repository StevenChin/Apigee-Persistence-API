"use strict";angular.module("apigeePersistenceApiApp").service("CollectionRepository",["DataClientUtil","DataValidationUtil","$log","RequestOptions","CollectionErrorLogger",function(a,b,c,d,e){var f=function(a,c,f,g){var h=null;if(b.isValidDataClient(a)&&b.isValidString(c)){var i=angular.copy(d.getCollection);i.client=a,i.type=c,f&&b.isValidString(f)&&(i.qs.ql=f),g&&b.isValidNumber(g)&&(i.qs.limit=g),h=new Apigee.Collection(i)}else e.initializationFailure();return h},g=[],h=function(){this.entities=[]},i=function(a,d){a?c.error(a):b.isValidDataEntities(d)?this.entities.push.apply(this.entities,d.entities):e.invalidDataEntities()},j=function(a,c){b.isValidCollection(a)?(this.clearEntities(),a.fetch(function(d,f){if(d)c(d,null);else if(b.isValidDataEntities(f)){for(this.entities=f.entities;a.hasNextPage();)a.getNextPage(i);c(null,this.entities)}else c(e.invalidDataEntitiesMsg,null)})):c(e.invalidCollectionMsg,null)};return{initCollection:f,getAll:j,entities:g,clearEntities:h}}]),angular.module("apigeePersistenceApiApp").service("DataClientUtil",["$log","DataValidationUtil",function(a,b){var c=function(c,d){var e=null;return b.isValidString(c)&&b.isValidString(d)?e=new Apigee.Client({orgName:c,appName:d}):a.error("Intialization of data client could not be performed. At least one of the following occurred:\n- orgName was invalid\n- appName was invalid\n"),e},d=function(c,d,e,f){if(b.isValidString(d)&&b.isValidString(e)&&b.isValidDataClient(c)){var g=b.isValidFunction(f);c.login(d,e,function(b,c){b?(a.error("login error: "+b),g&&f(b,null)):g&&f(null,c)})}else a.error("Login could not be performed. At least one of the following occurred:\n- username was invalid\n- password was invalid\n- dataClient was invalid")};return{initDataClient:c,login:d}}]),angular.module("apigeePersistenceApiApp").service("DataValidationUtil",[function(){var a=function(a){return Object.prototype.toString.call(a).slice(8,-1)},b=function(a){return"String"===this.getDataType(a)?!0:!1},c=function(a){return void 0===a||null===a?!1:a.hasOwnProperty("monitoringEnabled")&&a.hasOwnProperty("monitor")&&a.hasOwnProperty("orgName")&&a.hasOwnProperty("appName")&&a.hasOwnProperty("URI")?!0:!1},d=function(a){return"Number"===this.getDataType(a)?!0:!1},e=function(a){return"Function"===this.getDataType(a)?!0:!1},f=function(a){return void 0===a||null===a?!1:a.hasOwnProperty("_client")&&this.isValidDataClient(a._client)&&a.hasOwnProperty("_type")&&a.hasOwnProperty("qs")?!0:!1},g=function(a){var b=!1;return a&&a.entities&&"Array"===this.getDataType(a.entities)&&(b=!0),b};return{getDataType:a,isValidString:b,isValidDataClient:c,isValidNumber:d,isValidFunction:e,isValidCollection:f,isValidDataEntities:g}}]),angular.module("apigeePersistenceApiApp").service("CollectionErrorLogger",["$log",function(a){var b="Data Entities for collection is invalid. One of the following occurred:\n- data entities is undefined\n- data entities is null\n- data entities is not an array\n",c="Entities from the collection could not be retrieved, collection was invalid",d="Initialization of collection could not be performed. At least one of the following occurred:\n- dataClient was invalid\n- type was invalid\n",e=function(){a.error(b)},f=function(){a.error(c)},g=function(){a.error(d)};return{invalidDataEntities:e,invalidDataEntitiesMsg:b,invalidCollection:f,invalidCollectionMsg:c,initializationFailure:g,initializationFailureMsg:d}}]),angular.module("apigeePersistenceApiApp").constant("RequestOptions",function(){return{getCollection:{client:{},type:"",qs:{ql:"",limit:10}}}}());